// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: usermessages.proto

#ifndef PROTOBUF_usermessages_2eproto__INCLUDED
#define PROTOBUF_usermessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "google/protobuf/descriptor.pb.h"
#include "netmessages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_usermessages_2eproto();
void protobuf_AssignDesc_usermessages_2eproto();
void protobuf_ShutdownFile_usermessages_2eproto();

class CUserMsg_AchievementEvent;
class CUserMsg_CloseCaption;
class CUserMsg_CurrentTimescale;
class CUserMsg_DesiredTimescale;
class CUserMsg_Fade;
class CUserMsg_Shake;
class CUserMsg_ShakeDir;
class CUserMsg_Tilt;
class CUserMsg_SayText;
class CUserMsg_SayText2;
class CUserMsg_HudMsg;
class CUserMsg_HudText;
class CUserMsg_TextMsg;
class CUserMsg_GameTitle;
class CUserMsg_ResetHUD;
class CUserMsg_SendAudio;
class CUserMsg_VoiceMask;
class CUserMsg_RequestState;
class CUserMsg_HintText;
class CUserMsg_KeyHintText;
class CUserMsg_StatsCrawlMsg;
class CUserMsg_StatsSkipState;
class CUserMsg_VoiceSubtitle;
class CUserMsg_VGUIMenu;
class CUserMsg_VGUIMenu_Keys;
class CUserMsg_Geiger;
class CUserMsg_Rumble;
class CUserMsg_Train;
class CUserMsg_SayTextChannel;
class CUserMsg_MessageText;

enum EBaseUserMessages {
  UM_AchievementEvent = 1,
  UM_CloseCaption = 2,
  UM_CloseCaptionDirect = 3,
  UM_CurrentTimescale = 4,
  UM_DesiredTimescale = 5,
  UM_Fade = 6,
  UM_GameTitle = 7,
  UM_Geiger = 8,
  UM_HintText = 9,
  UM_HudMsg = 10,
  UM_HudText = 11,
  UM_KeyHintText = 12,
  UM_MessageText = 13,
  UM_RequestState = 14,
  UM_ResetHUD = 15,
  UM_Rumble = 16,
  UM_SayText = 17,
  UM_SayText2 = 18,
  UM_SayTextChannel = 19,
  UM_Shake = 20,
  UM_ShakeDir = 21,
  UM_StatsCrawlMsg = 22,
  UM_StatsSkipState = 23,
  UM_TextMsg = 24,
  UM_Tilt = 25,
  UM_Train = 26,
  UM_VGUIMenu = 27,
  UM_VoiceMask = 28,
  UM_VoiceSubtitle = 29,
  UM_SendAudio = 30,
  UM_MAX_BASE = 63
};
bool EBaseUserMessages_IsValid(int value);
const EBaseUserMessages EBaseUserMessages_MIN = UM_AchievementEvent;
const EBaseUserMessages EBaseUserMessages_MAX = UM_MAX_BASE;
const int EBaseUserMessages_ARRAYSIZE = EBaseUserMessages_MAX + 1;

const ::google::protobuf::EnumDescriptor* EBaseUserMessages_descriptor();
inline const ::std::string& EBaseUserMessages_Name(EBaseUserMessages value) {
  return ::google::protobuf::internal::NameOfEnum(
    EBaseUserMessages_descriptor(), value);
}
inline bool EBaseUserMessages_Parse(
    const ::std::string& name, EBaseUserMessages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EBaseUserMessages>(
    EBaseUserMessages_descriptor(), name, value);
}
// ===================================================================

class CUserMsg_AchievementEvent : public ::google::protobuf::Message {
 public:
  CUserMsg_AchievementEvent();
  virtual ~CUserMsg_AchievementEvent();
  
  CUserMsg_AchievementEvent(const CUserMsg_AchievementEvent& from);
  
  inline CUserMsg_AchievementEvent& operator=(const CUserMsg_AchievementEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_AchievementEvent& default_instance();
  
  void Swap(CUserMsg_AchievementEvent* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_AchievementEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_AchievementEvent& from);
  void MergeFrom(const CUserMsg_AchievementEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 achievement = 1;
  inline bool has_achievement() const;
  inline void clear_achievement();
  static const int kAchievementFieldNumber = 1;
  inline ::google::protobuf::uint32 achievement() const;
  inline void set_achievement(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_AchievementEvent)
 private:
  inline void set_has_achievement();
  inline void clear_has_achievement();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 achievement_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_AchievementEvent* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_CloseCaption : public ::google::protobuf::Message {
 public:
  CUserMsg_CloseCaption();
  virtual ~CUserMsg_CloseCaption();
  
  CUserMsg_CloseCaption(const CUserMsg_CloseCaption& from);
  
  inline CUserMsg_CloseCaption& operator=(const CUserMsg_CloseCaption& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_CloseCaption& default_instance();
  
  void Swap(CUserMsg_CloseCaption* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_CloseCaption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_CloseCaption& from);
  void MergeFrom(const CUserMsg_CloseCaption& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed32 hash = 1;
  inline bool has_hash() const;
  inline void clear_hash();
  static const int kHashFieldNumber = 1;
  inline ::google::protobuf::uint32 hash() const;
  inline void set_hash(::google::protobuf::uint32 value);
  
  // optional float duration = 2;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 2;
  inline float duration() const;
  inline void set_duration(float value);
  
  // optional bool from_player = 3;
  inline bool has_from_player() const;
  inline void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  inline bool from_player() const;
  inline void set_from_player(bool value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_CloseCaption)
 private:
  inline void set_has_hash();
  inline void clear_has_hash();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_from_player();
  inline void clear_has_from_player();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hash_;
  float duration_;
  bool from_player_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_CloseCaption* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_CurrentTimescale : public ::google::protobuf::Message {
 public:
  CUserMsg_CurrentTimescale();
  virtual ~CUserMsg_CurrentTimescale();
  
  CUserMsg_CurrentTimescale(const CUserMsg_CurrentTimescale& from);
  
  inline CUserMsg_CurrentTimescale& operator=(const CUserMsg_CurrentTimescale& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_CurrentTimescale& default_instance();
  
  void Swap(CUserMsg_CurrentTimescale* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_CurrentTimescale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_CurrentTimescale& from);
  void MergeFrom(const CUserMsg_CurrentTimescale& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional float current = 1;
  inline bool has_current() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 1;
  inline float current() const;
  inline void set_current(float value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_CurrentTimescale)
 private:
  inline void set_has_current();
  inline void clear_has_current();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float current_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_CurrentTimescale* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_DesiredTimescale : public ::google::protobuf::Message {
 public:
  CUserMsg_DesiredTimescale();
  virtual ~CUserMsg_DesiredTimescale();
  
  CUserMsg_DesiredTimescale(const CUserMsg_DesiredTimescale& from);
  
  inline CUserMsg_DesiredTimescale& operator=(const CUserMsg_DesiredTimescale& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_DesiredTimescale& default_instance();
  
  void Swap(CUserMsg_DesiredTimescale* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_DesiredTimescale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_DesiredTimescale& from);
  void MergeFrom(const CUserMsg_DesiredTimescale& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional float desired = 1;
  inline bool has_desired() const;
  inline void clear_desired();
  static const int kDesiredFieldNumber = 1;
  inline float desired() const;
  inline void set_desired(float value);
  
  // optional float duration = 2;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 2;
  inline float duration() const;
  inline void set_duration(float value);
  
  // optional uint32 interpolator = 3;
  inline bool has_interpolator() const;
  inline void clear_interpolator();
  static const int kInterpolatorFieldNumber = 3;
  inline ::google::protobuf::uint32 interpolator() const;
  inline void set_interpolator(::google::protobuf::uint32 value);
  
  // optional float start_blend_time = 4;
  inline bool has_start_blend_time() const;
  inline void clear_start_blend_time();
  static const int kStartBlendTimeFieldNumber = 4;
  inline float start_blend_time() const;
  inline void set_start_blend_time(float value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_DesiredTimescale)
 private:
  inline void set_has_desired();
  inline void clear_has_desired();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_interpolator();
  inline void clear_has_interpolator();
  inline void set_has_start_blend_time();
  inline void clear_has_start_blend_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float desired_;
  float duration_;
  ::google::protobuf::uint32 interpolator_;
  float start_blend_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_DesiredTimescale* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_Fade : public ::google::protobuf::Message {
 public:
  CUserMsg_Fade();
  virtual ~CUserMsg_Fade();
  
  CUserMsg_Fade(const CUserMsg_Fade& from);
  
  inline CUserMsg_Fade& operator=(const CUserMsg_Fade& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_Fade& default_instance();
  
  void Swap(CUserMsg_Fade* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_Fade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_Fade& from);
  void MergeFrom(const CUserMsg_Fade& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 duration = 1;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 1;
  inline ::google::protobuf::uint32 duration() const;
  inline void set_duration(::google::protobuf::uint32 value);
  
  // optional uint32 hold_time = 2;
  inline bool has_hold_time() const;
  inline void clear_hold_time();
  static const int kHoldTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 hold_time() const;
  inline void set_hold_time(::google::protobuf::uint32 value);
  
  // optional uint32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);
  
  // optional fixed32 color = 4;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 4;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_Fade)
 private:
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_hold_time();
  inline void clear_has_hold_time();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_color();
  inline void clear_has_color();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 hold_time_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 color_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_Fade* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_Shake : public ::google::protobuf::Message {
 public:
  CUserMsg_Shake();
  virtual ~CUserMsg_Shake();
  
  CUserMsg_Shake(const CUserMsg_Shake& from);
  
  inline CUserMsg_Shake& operator=(const CUserMsg_Shake& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_Shake& default_instance();
  
  void Swap(CUserMsg_Shake* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_Shake* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_Shake& from);
  void MergeFrom(const CUserMsg_Shake& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 command = 1;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 1;
  inline ::google::protobuf::uint32 command() const;
  inline void set_command(::google::protobuf::uint32 value);
  
  // optional float amplitude = 2;
  inline bool has_amplitude() const;
  inline void clear_amplitude();
  static const int kAmplitudeFieldNumber = 2;
  inline float amplitude() const;
  inline void set_amplitude(float value);
  
  // optional float frequency = 3;
  inline bool has_frequency() const;
  inline void clear_frequency();
  static const int kFrequencyFieldNumber = 3;
  inline float frequency() const;
  inline void set_frequency(float value);
  
  // optional float duration = 4;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 4;
  inline float duration() const;
  inline void set_duration(float value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_Shake)
 private:
  inline void set_has_command();
  inline void clear_has_command();
  inline void set_has_amplitude();
  inline void clear_has_amplitude();
  inline void set_has_frequency();
  inline void clear_has_frequency();
  inline void set_has_duration();
  inline void clear_has_duration();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 command_;
  float amplitude_;
  float frequency_;
  float duration_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_Shake* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_ShakeDir : public ::google::protobuf::Message {
 public:
  CUserMsg_ShakeDir();
  virtual ~CUserMsg_ShakeDir();
  
  CUserMsg_ShakeDir(const CUserMsg_ShakeDir& from);
  
  inline CUserMsg_ShakeDir& operator=(const CUserMsg_ShakeDir& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_ShakeDir& default_instance();
  
  void Swap(CUserMsg_ShakeDir* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_ShakeDir* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_ShakeDir& from);
  void MergeFrom(const CUserMsg_ShakeDir& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CUserMsg_Shake shake = 1;
  inline bool has_shake() const;
  inline void clear_shake();
  static const int kShakeFieldNumber = 1;
  inline const ::CUserMsg_Shake& shake() const;
  inline ::CUserMsg_Shake* mutable_shake();
  inline ::CUserMsg_Shake* release_shake();
  
  // optional .CMsgVector direction = 2;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 2;
  inline const ::CMsgVector& direction() const;
  inline ::CMsgVector* mutable_direction();
  inline ::CMsgVector* release_direction();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_ShakeDir)
 private:
  inline void set_has_shake();
  inline void clear_has_shake();
  inline void set_has_direction();
  inline void clear_has_direction();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CUserMsg_Shake* shake_;
  ::CMsgVector* direction_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_ShakeDir* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_Tilt : public ::google::protobuf::Message {
 public:
  CUserMsg_Tilt();
  virtual ~CUserMsg_Tilt();
  
  CUserMsg_Tilt(const CUserMsg_Tilt& from);
  
  inline CUserMsg_Tilt& operator=(const CUserMsg_Tilt& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_Tilt& default_instance();
  
  void Swap(CUserMsg_Tilt* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_Tilt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_Tilt& from);
  void MergeFrom(const CUserMsg_Tilt& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 command = 1;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 1;
  inline ::google::protobuf::uint32 command() const;
  inline void set_command(::google::protobuf::uint32 value);
  
  // optional bool ease_in_out = 2;
  inline bool has_ease_in_out() const;
  inline void clear_ease_in_out();
  static const int kEaseInOutFieldNumber = 2;
  inline bool ease_in_out() const;
  inline void set_ease_in_out(bool value);
  
  // optional .CMsgVector angle = 3;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 3;
  inline const ::CMsgVector& angle() const;
  inline ::CMsgVector* mutable_angle();
  inline ::CMsgVector* release_angle();
  
  // optional float duration = 4;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 4;
  inline float duration() const;
  inline void set_duration(float value);
  
  // optional float time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline float time() const;
  inline void set_time(float value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_Tilt)
 private:
  inline void set_has_command();
  inline void clear_has_command();
  inline void set_has_ease_in_out();
  inline void clear_has_ease_in_out();
  inline void set_has_angle();
  inline void clear_has_angle();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 command_;
  bool ease_in_out_;
  ::CMsgVector* angle_;
  float duration_;
  float time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_Tilt* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_SayText : public ::google::protobuf::Message {
 public:
  CUserMsg_SayText();
  virtual ~CUserMsg_SayText();
  
  CUserMsg_SayText(const CUserMsg_SayText& from);
  
  inline CUserMsg_SayText& operator=(const CUserMsg_SayText& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_SayText& default_instance();
  
  void Swap(CUserMsg_SayText* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_SayText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_SayText& from);
  void MergeFrom(const CUserMsg_SayText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 client = 1;
  inline bool has_client() const;
  inline void clear_client();
  static const int kClientFieldNumber = 1;
  inline ::google::protobuf::uint32 client() const;
  inline void set_client(::google::protobuf::uint32 value);
  
  // optional string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // optional bool chat = 3;
  inline bool has_chat() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 3;
  inline bool chat() const;
  inline void set_chat(bool value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_SayText)
 private:
  inline void set_has_client();
  inline void clear_has_client();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_chat();
  inline void clear_has_chat();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* text_;
  ::google::protobuf::uint32 client_;
  bool chat_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_SayText* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_SayText2 : public ::google::protobuf::Message {
 public:
  CUserMsg_SayText2();
  virtual ~CUserMsg_SayText2();
  
  CUserMsg_SayText2(const CUserMsg_SayText2& from);
  
  inline CUserMsg_SayText2& operator=(const CUserMsg_SayText2& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_SayText2& default_instance();
  
  void Swap(CUserMsg_SayText2* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_SayText2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_SayText2& from);
  void MergeFrom(const CUserMsg_SayText2& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 client = 1;
  inline bool has_client() const;
  inline void clear_client();
  static const int kClientFieldNumber = 1;
  inline ::google::protobuf::uint32 client() const;
  inline void set_client(::google::protobuf::uint32 value);
  
  // optional bool chat = 2;
  inline bool has_chat() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 2;
  inline bool chat() const;
  inline void set_chat(bool value);
  
  // optional string format = 3;
  inline bool has_format() const;
  inline void clear_format();
  static const int kFormatFieldNumber = 3;
  inline const ::std::string& format() const;
  inline void set_format(const ::std::string& value);
  inline void set_format(const char* value);
  inline void set_format(const char* value, size_t size);
  inline ::std::string* mutable_format();
  inline ::std::string* release_format();
  
  // optional string prefix = 4;
  inline bool has_prefix() const;
  inline void clear_prefix();
  static const int kPrefixFieldNumber = 4;
  inline const ::std::string& prefix() const;
  inline void set_prefix(const ::std::string& value);
  inline void set_prefix(const char* value);
  inline void set_prefix(const char* value, size_t size);
  inline ::std::string* mutable_prefix();
  inline ::std::string* release_prefix();
  
  // optional string text = 5;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 5;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // optional string location = 6;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 6;
  inline const ::std::string& location() const;
  inline void set_location(const ::std::string& value);
  inline void set_location(const char* value);
  inline void set_location(const char* value, size_t size);
  inline ::std::string* mutable_location();
  inline ::std::string* release_location();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_SayText2)
 private:
  inline void set_has_client();
  inline void clear_has_client();
  inline void set_has_chat();
  inline void clear_has_chat();
  inline void set_has_format();
  inline void clear_has_format();
  inline void set_has_prefix();
  inline void clear_has_prefix();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_location();
  inline void clear_has_location();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 client_;
  bool chat_;
  ::std::string* format_;
  ::std::string* prefix_;
  ::std::string* text_;
  ::std::string* location_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_SayText2* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_HudMsg : public ::google::protobuf::Message {
 public:
  CUserMsg_HudMsg();
  virtual ~CUserMsg_HudMsg();
  
  CUserMsg_HudMsg(const CUserMsg_HudMsg& from);
  
  inline CUserMsg_HudMsg& operator=(const CUserMsg_HudMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_HudMsg& default_instance();
  
  void Swap(CUserMsg_HudMsg* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_HudMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_HudMsg& from);
  void MergeFrom(const CUserMsg_HudMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 channel = 1;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 1;
  inline ::google::protobuf::uint32 channel() const;
  inline void set_channel(::google::protobuf::uint32 value);
  
  // optional float x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);
  
  // optional float y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);
  
  // optional uint32 color1 = 4;
  inline bool has_color1() const;
  inline void clear_color1();
  static const int kColor1FieldNumber = 4;
  inline ::google::protobuf::uint32 color1() const;
  inline void set_color1(::google::protobuf::uint32 value);
  
  // optional uint32 color2 = 5;
  inline bool has_color2() const;
  inline void clear_color2();
  static const int kColor2FieldNumber = 5;
  inline ::google::protobuf::uint32 color2() const;
  inline void set_color2(::google::protobuf::uint32 value);
  
  // optional uint32 effect = 6;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 6;
  inline ::google::protobuf::uint32 effect() const;
  inline void set_effect(::google::protobuf::uint32 value);
  
  // optional float fade_in_time = 7;
  inline bool has_fade_in_time() const;
  inline void clear_fade_in_time();
  static const int kFadeInTimeFieldNumber = 7;
  inline float fade_in_time() const;
  inline void set_fade_in_time(float value);
  
  // optional float fade_out_time = 8;
  inline bool has_fade_out_time() const;
  inline void clear_fade_out_time();
  static const int kFadeOutTimeFieldNumber = 8;
  inline float fade_out_time() const;
  inline void set_fade_out_time(float value);
  
  // optional float hold_time = 9;
  inline bool has_hold_time() const;
  inline void clear_hold_time();
  static const int kHoldTimeFieldNumber = 9;
  inline float hold_time() const;
  inline void set_hold_time(float value);
  
  // optional float fx_time = 10;
  inline bool has_fx_time() const;
  inline void clear_fx_time();
  static const int kFxTimeFieldNumber = 10;
  inline float fx_time() const;
  inline void set_fx_time(float value);
  
  // optional string message = 11;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 11;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_HudMsg)
 private:
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_color1();
  inline void clear_has_color1();
  inline void set_has_color2();
  inline void clear_has_color2();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_fade_in_time();
  inline void clear_has_fade_in_time();
  inline void set_has_fade_out_time();
  inline void clear_has_fade_out_time();
  inline void set_has_hold_time();
  inline void clear_has_hold_time();
  inline void set_has_fx_time();
  inline void clear_has_fx_time();
  inline void set_has_message();
  inline void clear_has_message();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 channel_;
  float x_;
  float y_;
  ::google::protobuf::uint32 color1_;
  ::google::protobuf::uint32 color2_;
  ::google::protobuf::uint32 effect_;
  float fade_in_time_;
  float fade_out_time_;
  float hold_time_;
  float fx_time_;
  ::std::string* message_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_HudMsg* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_HudText : public ::google::protobuf::Message {
 public:
  CUserMsg_HudText();
  virtual ~CUserMsg_HudText();
  
  CUserMsg_HudText(const CUserMsg_HudText& from);
  
  inline CUserMsg_HudText& operator=(const CUserMsg_HudText& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_HudText& default_instance();
  
  void Swap(CUserMsg_HudText* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_HudText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_HudText& from);
  void MergeFrom(const CUserMsg_HudText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_HudText)
 private:
  inline void set_has_message();
  inline void clear_has_message();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* message_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_HudText* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_TextMsg : public ::google::protobuf::Message {
 public:
  CUserMsg_TextMsg();
  virtual ~CUserMsg_TextMsg();
  
  CUserMsg_TextMsg(const CUserMsg_TextMsg& from);
  
  inline CUserMsg_TextMsg& operator=(const CUserMsg_TextMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_TextMsg& default_instance();
  
  void Swap(CUserMsg_TextMsg* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_TextMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_TextMsg& from);
  void MergeFrom(const CUserMsg_TextMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 dest = 1;
  inline bool has_dest() const;
  inline void clear_dest();
  static const int kDestFieldNumber = 1;
  inline ::google::protobuf::uint32 dest() const;
  inline void set_dest(::google::protobuf::uint32 value);
  
  // repeated string param = 2;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline const ::std::string& param(int index) const;
  inline ::std::string* mutable_param(int index);
  inline void set_param(int index, const ::std::string& value);
  inline void set_param(int index, const char* value);
  inline void set_param(int index, const char* value, size_t size);
  inline ::std::string* add_param();
  inline void add_param(const ::std::string& value);
  inline void add_param(const char* value);
  inline void add_param(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& param() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_TextMsg)
 private:
  inline void set_has_dest();
  inline void clear_has_dest();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> param_;
  ::google::protobuf::uint32 dest_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_TextMsg* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_GameTitle : public ::google::protobuf::Message {
 public:
  CUserMsg_GameTitle();
  virtual ~CUserMsg_GameTitle();
  
  CUserMsg_GameTitle(const CUserMsg_GameTitle& from);
  
  inline CUserMsg_GameTitle& operator=(const CUserMsg_GameTitle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_GameTitle& default_instance();
  
  void Swap(CUserMsg_GameTitle* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_GameTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_GameTitle& from);
  void MergeFrom(const CUserMsg_GameTitle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CUserMsg_GameTitle)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_GameTitle* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_ResetHUD : public ::google::protobuf::Message {
 public:
  CUserMsg_ResetHUD();
  virtual ~CUserMsg_ResetHUD();
  
  CUserMsg_ResetHUD(const CUserMsg_ResetHUD& from);
  
  inline CUserMsg_ResetHUD& operator=(const CUserMsg_ResetHUD& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_ResetHUD& default_instance();
  
  void Swap(CUserMsg_ResetHUD* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_ResetHUD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_ResetHUD& from);
  void MergeFrom(const CUserMsg_ResetHUD& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CUserMsg_ResetHUD)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_ResetHUD* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_SendAudio : public ::google::protobuf::Message {
 public:
  CUserMsg_SendAudio();
  virtual ~CUserMsg_SendAudio();
  
  CUserMsg_SendAudio(const CUserMsg_SendAudio& from);
  
  inline CUserMsg_SendAudio& operator=(const CUserMsg_SendAudio& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_SendAudio& default_instance();
  
  void Swap(CUserMsg_SendAudio* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_SendAudio* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_SendAudio& from);
  void MergeFrom(const CUserMsg_SendAudio& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool stop = 2;
  inline bool has_stop() const;
  inline void clear_stop();
  static const int kStopFieldNumber = 2;
  inline bool stop() const;
  inline void set_stop(bool value);
  
  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_SendAudio)
 private:
  inline void set_has_stop();
  inline void clear_has_stop();
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  bool stop_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_SendAudio* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_VoiceMask : public ::google::protobuf::Message {
 public:
  CUserMsg_VoiceMask();
  virtual ~CUserMsg_VoiceMask();
  
  CUserMsg_VoiceMask(const CUserMsg_VoiceMask& from);
  
  inline CUserMsg_VoiceMask& operator=(const CUserMsg_VoiceMask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_VoiceMask& default_instance();
  
  void Swap(CUserMsg_VoiceMask* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_VoiceMask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_VoiceMask& from);
  void MergeFrom(const CUserMsg_VoiceMask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 audible_players_mask = 1;
  inline int audible_players_mask_size() const;
  inline void clear_audible_players_mask();
  static const int kAudiblePlayersMaskFieldNumber = 1;
  inline ::google::protobuf::int32 audible_players_mask(int index) const;
  inline void set_audible_players_mask(int index, ::google::protobuf::int32 value);
  inline void add_audible_players_mask(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      audible_players_mask() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_audible_players_mask();
  
  // optional bool player_mod_enabled = 2;
  inline bool has_player_mod_enabled() const;
  inline void clear_player_mod_enabled();
  static const int kPlayerModEnabledFieldNumber = 2;
  inline bool player_mod_enabled() const;
  inline void set_player_mod_enabled(bool value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_VoiceMask)
 private:
  inline void set_has_player_mod_enabled();
  inline void clear_has_player_mod_enabled();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > audible_players_mask_;
  bool player_mod_enabled_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_VoiceMask* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_RequestState : public ::google::protobuf::Message {
 public:
  CUserMsg_RequestState();
  virtual ~CUserMsg_RequestState();
  
  CUserMsg_RequestState(const CUserMsg_RequestState& from);
  
  inline CUserMsg_RequestState& operator=(const CUserMsg_RequestState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_RequestState& default_instance();
  
  void Swap(CUserMsg_RequestState* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_RequestState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_RequestState& from);
  void MergeFrom(const CUserMsg_RequestState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CUserMsg_RequestState)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_RequestState* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_HintText : public ::google::protobuf::Message {
 public:
  CUserMsg_HintText();
  virtual ~CUserMsg_HintText();
  
  CUserMsg_HintText(const CUserMsg_HintText& from);
  
  inline CUserMsg_HintText& operator=(const CUserMsg_HintText& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_HintText& default_instance();
  
  void Swap(CUserMsg_HintText* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_HintText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_HintText& from);
  void MergeFrom(const CUserMsg_HintText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_HintText)
 private:
  inline void set_has_message();
  inline void clear_has_message();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* message_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_HintText* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_KeyHintText : public ::google::protobuf::Message {
 public:
  CUserMsg_KeyHintText();
  virtual ~CUserMsg_KeyHintText();
  
  CUserMsg_KeyHintText(const CUserMsg_KeyHintText& from);
  
  inline CUserMsg_KeyHintText& operator=(const CUserMsg_KeyHintText& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_KeyHintText& default_instance();
  
  void Swap(CUserMsg_KeyHintText* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_KeyHintText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_KeyHintText& from);
  void MergeFrom(const CUserMsg_KeyHintText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string messages = 1;
  inline int messages_size() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 1;
  inline const ::std::string& messages(int index) const;
  inline ::std::string* mutable_messages(int index);
  inline void set_messages(int index, const ::std::string& value);
  inline void set_messages(int index, const char* value);
  inline void set_messages(int index, const char* value, size_t size);
  inline ::std::string* add_messages();
  inline void add_messages(const ::std::string& value);
  inline void add_messages(const char* value);
  inline void add_messages(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_messages();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_KeyHintText)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> messages_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_KeyHintText* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_StatsCrawlMsg : public ::google::protobuf::Message {
 public:
  CUserMsg_StatsCrawlMsg();
  virtual ~CUserMsg_StatsCrawlMsg();
  
  CUserMsg_StatsCrawlMsg(const CUserMsg_StatsCrawlMsg& from);
  
  inline CUserMsg_StatsCrawlMsg& operator=(const CUserMsg_StatsCrawlMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_StatsCrawlMsg& default_instance();
  
  void Swap(CUserMsg_StatsCrawlMsg* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_StatsCrawlMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_StatsCrawlMsg& from);
  void MergeFrom(const CUserMsg_StatsCrawlMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CUserMsg_StatsCrawlMsg)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_StatsCrawlMsg* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_StatsSkipState : public ::google::protobuf::Message {
 public:
  CUserMsg_StatsSkipState();
  virtual ~CUserMsg_StatsSkipState();
  
  CUserMsg_StatsSkipState(const CUserMsg_StatsSkipState& from);
  
  inline CUserMsg_StatsSkipState& operator=(const CUserMsg_StatsSkipState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_StatsSkipState& default_instance();
  
  void Swap(CUserMsg_StatsSkipState* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_StatsSkipState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_StatsSkipState& from);
  void MergeFrom(const CUserMsg_StatsSkipState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 num_skips = 1;
  inline bool has_num_skips() const;
  inline void clear_num_skips();
  static const int kNumSkipsFieldNumber = 1;
  inline ::google::protobuf::int32 num_skips() const;
  inline void set_num_skips(::google::protobuf::int32 value);
  
  // optional int32 num_players = 2;
  inline bool has_num_players() const;
  inline void clear_num_players();
  static const int kNumPlayersFieldNumber = 2;
  inline ::google::protobuf::int32 num_players() const;
  inline void set_num_players(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_StatsSkipState)
 private:
  inline void set_has_num_skips();
  inline void clear_has_num_skips();
  inline void set_has_num_players();
  inline void clear_has_num_players();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 num_skips_;
  ::google::protobuf::int32 num_players_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_StatsSkipState* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_VoiceSubtitle : public ::google::protobuf::Message {
 public:
  CUserMsg_VoiceSubtitle();
  virtual ~CUserMsg_VoiceSubtitle();
  
  CUserMsg_VoiceSubtitle(const CUserMsg_VoiceSubtitle& from);
  
  inline CUserMsg_VoiceSubtitle& operator=(const CUserMsg_VoiceSubtitle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_VoiceSubtitle& default_instance();
  
  void Swap(CUserMsg_VoiceSubtitle* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_VoiceSubtitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_VoiceSubtitle& from);
  void MergeFrom(const CUserMsg_VoiceSubtitle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 ent_index = 1;
  inline bool has_ent_index() const;
  inline void clear_ent_index();
  static const int kEntIndexFieldNumber = 1;
  inline ::google::protobuf::int32 ent_index() const;
  inline void set_ent_index(::google::protobuf::int32 value);
  
  // optional int32 menu = 2;
  inline bool has_menu() const;
  inline void clear_menu();
  static const int kMenuFieldNumber = 2;
  inline ::google::protobuf::int32 menu() const;
  inline void set_menu(::google::protobuf::int32 value);
  
  // optional int32 item = 3;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline ::google::protobuf::int32 item() const;
  inline void set_item(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_VoiceSubtitle)
 private:
  inline void set_has_ent_index();
  inline void clear_has_ent_index();
  inline void set_has_menu();
  inline void clear_has_menu();
  inline void set_has_item();
  inline void clear_has_item();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 ent_index_;
  ::google::protobuf::int32 menu_;
  ::google::protobuf::int32 item_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_VoiceSubtitle* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_VGUIMenu_Keys : public ::google::protobuf::Message {
 public:
  CUserMsg_VGUIMenu_Keys();
  virtual ~CUserMsg_VGUIMenu_Keys();
  
  CUserMsg_VGUIMenu_Keys(const CUserMsg_VGUIMenu_Keys& from);
  
  inline CUserMsg_VGUIMenu_Keys& operator=(const CUserMsg_VGUIMenu_Keys& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_VGUIMenu_Keys& default_instance();
  
  void Swap(CUserMsg_VGUIMenu_Keys* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_VGUIMenu_Keys* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_VGUIMenu_Keys& from);
  void MergeFrom(const CUserMsg_VGUIMenu_Keys& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_VGUIMenu.Keys)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_VGUIMenu_Keys* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_VGUIMenu : public ::google::protobuf::Message {
 public:
  CUserMsg_VGUIMenu();
  virtual ~CUserMsg_VGUIMenu();
  
  CUserMsg_VGUIMenu(const CUserMsg_VGUIMenu& from);
  
  inline CUserMsg_VGUIMenu& operator=(const CUserMsg_VGUIMenu& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_VGUIMenu& default_instance();
  
  void Swap(CUserMsg_VGUIMenu* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_VGUIMenu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_VGUIMenu& from);
  void MergeFrom(const CUserMsg_VGUIMenu& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CUserMsg_VGUIMenu_Keys Keys;
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional bool show = 2;
  inline bool has_show() const;
  inline void clear_show();
  static const int kShowFieldNumber = 2;
  inline bool show() const;
  inline void set_show(bool value);
  
  // repeated .CUserMsg_VGUIMenu.Keys keys = 3;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 3;
  inline const ::CUserMsg_VGUIMenu_Keys& keys(int index) const;
  inline ::CUserMsg_VGUIMenu_Keys* mutable_keys(int index);
  inline ::CUserMsg_VGUIMenu_Keys* add_keys();
  inline const ::google::protobuf::RepeatedPtrField< ::CUserMsg_VGUIMenu_Keys >&
      keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::CUserMsg_VGUIMenu_Keys >*
      mutable_keys();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_VGUIMenu)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_show();
  inline void clear_has_show();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::CUserMsg_VGUIMenu_Keys > keys_;
  bool show_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_VGUIMenu* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_Geiger : public ::google::protobuf::Message {
 public:
  CUserMsg_Geiger();
  virtual ~CUserMsg_Geiger();
  
  CUserMsg_Geiger(const CUserMsg_Geiger& from);
  
  inline CUserMsg_Geiger& operator=(const CUserMsg_Geiger& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_Geiger& default_instance();
  
  void Swap(CUserMsg_Geiger* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_Geiger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_Geiger& from);
  void MergeFrom(const CUserMsg_Geiger& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 range = 1;
  inline bool has_range() const;
  inline void clear_range();
  static const int kRangeFieldNumber = 1;
  inline ::google::protobuf::int32 range() const;
  inline void set_range(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_Geiger)
 private:
  inline void set_has_range();
  inline void clear_has_range();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 range_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_Geiger* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_Rumble : public ::google::protobuf::Message {
 public:
  CUserMsg_Rumble();
  virtual ~CUserMsg_Rumble();
  
  CUserMsg_Rumble(const CUserMsg_Rumble& from);
  
  inline CUserMsg_Rumble& operator=(const CUserMsg_Rumble& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_Rumble& default_instance();
  
  void Swap(CUserMsg_Rumble* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_Rumble* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_Rumble& from);
  void MergeFrom(const CUserMsg_Rumble& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline ::google::protobuf::int32 data() const;
  inline void set_data(::google::protobuf::int32 value);
  
  // optional int32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_Rumble)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_flags();
  inline void clear_has_flags();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 data_;
  ::google::protobuf::int32 flags_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_Rumble* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_Train : public ::google::protobuf::Message {
 public:
  CUserMsg_Train();
  virtual ~CUserMsg_Train();
  
  CUserMsg_Train(const CUserMsg_Train& from);
  
  inline CUserMsg_Train& operator=(const CUserMsg_Train& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_Train& default_instance();
  
  void Swap(CUserMsg_Train* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_Train* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_Train& from);
  void MergeFrom(const CUserMsg_Train& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 train = 1;
  inline bool has_train() const;
  inline void clear_train();
  static const int kTrainFieldNumber = 1;
  inline ::google::protobuf::int32 train() const;
  inline void set_train(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CUserMsg_Train)
 private:
  inline void set_has_train();
  inline void clear_has_train();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 train_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_Train* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_SayTextChannel : public ::google::protobuf::Message {
 public:
  CUserMsg_SayTextChannel();
  virtual ~CUserMsg_SayTextChannel();
  
  CUserMsg_SayTextChannel(const CUserMsg_SayTextChannel& from);
  
  inline CUserMsg_SayTextChannel& operator=(const CUserMsg_SayTextChannel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_SayTextChannel& default_instance();
  
  void Swap(CUserMsg_SayTextChannel* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_SayTextChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_SayTextChannel& from);
  void MergeFrom(const CUserMsg_SayTextChannel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 player = 1;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 1;
  inline ::google::protobuf::int32 player() const;
  inline void set_player(::google::protobuf::int32 value);
  
  // optional int32 channel = 2;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 2;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);
  
  // optional string text = 3;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 3;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_SayTextChannel)
 private:
  inline void set_has_player();
  inline void clear_has_player();
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_text();
  inline void clear_has_text();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 player_;
  ::google::protobuf::int32 channel_;
  ::std::string* text_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_SayTextChannel* default_instance_;
};
// -------------------------------------------------------------------

class CUserMsg_MessageText : public ::google::protobuf::Message {
 public:
  CUserMsg_MessageText();
  virtual ~CUserMsg_MessageText();
  
  CUserMsg_MessageText(const CUserMsg_MessageText& from);
  
  inline CUserMsg_MessageText& operator=(const CUserMsg_MessageText& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CUserMsg_MessageText& default_instance();
  
  void Swap(CUserMsg_MessageText* other);
  
  // implements Message ----------------------------------------------
  
  CUserMsg_MessageText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CUserMsg_MessageText& from);
  void MergeFrom(const CUserMsg_MessageText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 color = 1;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 1;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);
  
  // optional string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // @@protoc_insertion_point(class_scope:CUserMsg_MessageText)
 private:
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_text();
  inline void clear_has_text();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* text_;
  ::google::protobuf::uint32 color_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_usermessages_2eproto();
  friend void protobuf_AssignDesc_usermessages_2eproto();
  friend void protobuf_ShutdownFile_usermessages_2eproto();
  
  void InitAsDefaultInstance();
  static CUserMsg_MessageText* default_instance_;
};
// ===================================================================


// ===================================================================

// CUserMsg_AchievementEvent

// optional uint32 achievement = 1;
inline bool CUserMsg_AchievementEvent::has_achievement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_AchievementEvent::set_has_achievement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_AchievementEvent::clear_has_achievement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_AchievementEvent::clear_achievement() {
  achievement_ = 0u;
  clear_has_achievement();
}
inline ::google::protobuf::uint32 CUserMsg_AchievementEvent::achievement() const {
  return achievement_;
}
inline void CUserMsg_AchievementEvent::set_achievement(::google::protobuf::uint32 value) {
  set_has_achievement();
  achievement_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_CloseCaption

// optional fixed32 hash = 1;
inline bool CUserMsg_CloseCaption::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_CloseCaption::set_has_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_CloseCaption::clear_has_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_CloseCaption::clear_hash() {
  hash_ = 0u;
  clear_has_hash();
}
inline ::google::protobuf::uint32 CUserMsg_CloseCaption::hash() const {
  return hash_;
}
inline void CUserMsg_CloseCaption::set_hash(::google::protobuf::uint32 value) {
  set_has_hash();
  hash_ = value;
}

// optional float duration = 2;
inline bool CUserMsg_CloseCaption::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_CloseCaption::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_CloseCaption::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_CloseCaption::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CUserMsg_CloseCaption::duration() const {
  return duration_;
}
inline void CUserMsg_CloseCaption::set_duration(float value) {
  set_has_duration();
  duration_ = value;
}

// optional bool from_player = 3;
inline bool CUserMsg_CloseCaption::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_CloseCaption::set_has_from_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserMsg_CloseCaption::clear_has_from_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserMsg_CloseCaption::clear_from_player() {
  from_player_ = false;
  clear_has_from_player();
}
inline bool CUserMsg_CloseCaption::from_player() const {
  return from_player_;
}
inline void CUserMsg_CloseCaption::set_from_player(bool value) {
  set_has_from_player();
  from_player_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_CurrentTimescale

// optional float current = 1;
inline bool CUserMsg_CurrentTimescale::has_current() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_CurrentTimescale::set_has_current() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_CurrentTimescale::clear_has_current() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_CurrentTimescale::clear_current() {
  current_ = 0;
  clear_has_current();
}
inline float CUserMsg_CurrentTimescale::current() const {
  return current_;
}
inline void CUserMsg_CurrentTimescale::set_current(float value) {
  set_has_current();
  current_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_DesiredTimescale

// optional float desired = 1;
inline bool CUserMsg_DesiredTimescale::has_desired() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_DesiredTimescale::set_has_desired() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_DesiredTimescale::clear_has_desired() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_DesiredTimescale::clear_desired() {
  desired_ = 0;
  clear_has_desired();
}
inline float CUserMsg_DesiredTimescale::desired() const {
  return desired_;
}
inline void CUserMsg_DesiredTimescale::set_desired(float value) {
  set_has_desired();
  desired_ = value;
}

// optional float duration = 2;
inline bool CUserMsg_DesiredTimescale::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_DesiredTimescale::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_DesiredTimescale::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_DesiredTimescale::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CUserMsg_DesiredTimescale::duration() const {
  return duration_;
}
inline void CUserMsg_DesiredTimescale::set_duration(float value) {
  set_has_duration();
  duration_ = value;
}

// optional uint32 interpolator = 3;
inline bool CUserMsg_DesiredTimescale::has_interpolator() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_DesiredTimescale::set_has_interpolator() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserMsg_DesiredTimescale::clear_has_interpolator() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserMsg_DesiredTimescale::clear_interpolator() {
  interpolator_ = 0u;
  clear_has_interpolator();
}
inline ::google::protobuf::uint32 CUserMsg_DesiredTimescale::interpolator() const {
  return interpolator_;
}
inline void CUserMsg_DesiredTimescale::set_interpolator(::google::protobuf::uint32 value) {
  set_has_interpolator();
  interpolator_ = value;
}

// optional float start_blend_time = 4;
inline bool CUserMsg_DesiredTimescale::has_start_blend_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMsg_DesiredTimescale::set_has_start_blend_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUserMsg_DesiredTimescale::clear_has_start_blend_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUserMsg_DesiredTimescale::clear_start_blend_time() {
  start_blend_time_ = 0;
  clear_has_start_blend_time();
}
inline float CUserMsg_DesiredTimescale::start_blend_time() const {
  return start_blend_time_;
}
inline void CUserMsg_DesiredTimescale::set_start_blend_time(float value) {
  set_has_start_blend_time();
  start_blend_time_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_Fade

// optional uint32 duration = 1;
inline bool CUserMsg_Fade::has_duration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_Fade::set_has_duration() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_Fade::clear_has_duration() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_Fade::clear_duration() {
  duration_ = 0u;
  clear_has_duration();
}
inline ::google::protobuf::uint32 CUserMsg_Fade::duration() const {
  return duration_;
}
inline void CUserMsg_Fade::set_duration(::google::protobuf::uint32 value) {
  set_has_duration();
  duration_ = value;
}

// optional uint32 hold_time = 2;
inline bool CUserMsg_Fade::has_hold_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_Fade::set_has_hold_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_Fade::clear_has_hold_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_Fade::clear_hold_time() {
  hold_time_ = 0u;
  clear_has_hold_time();
}
inline ::google::protobuf::uint32 CUserMsg_Fade::hold_time() const {
  return hold_time_;
}
inline void CUserMsg_Fade::set_hold_time(::google::protobuf::uint32 value) {
  set_has_hold_time();
  hold_time_ = value;
}

// optional uint32 flags = 3;
inline bool CUserMsg_Fade::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_Fade::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserMsg_Fade::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserMsg_Fade::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CUserMsg_Fade::flags() const {
  return flags_;
}
inline void CUserMsg_Fade::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
}

// optional fixed32 color = 4;
inline bool CUserMsg_Fade::has_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMsg_Fade::set_has_color() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUserMsg_Fade::clear_has_color() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUserMsg_Fade::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 CUserMsg_Fade::color() const {
  return color_;
}
inline void CUserMsg_Fade::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_Shake

// optional uint32 command = 1;
inline bool CUserMsg_Shake::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_Shake::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_Shake::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_Shake::clear_command() {
  command_ = 0u;
  clear_has_command();
}
inline ::google::protobuf::uint32 CUserMsg_Shake::command() const {
  return command_;
}
inline void CUserMsg_Shake::set_command(::google::protobuf::uint32 value) {
  set_has_command();
  command_ = value;
}

// optional float amplitude = 2;
inline bool CUserMsg_Shake::has_amplitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_Shake::set_has_amplitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_Shake::clear_has_amplitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_Shake::clear_amplitude() {
  amplitude_ = 0;
  clear_has_amplitude();
}
inline float CUserMsg_Shake::amplitude() const {
  return amplitude_;
}
inline void CUserMsg_Shake::set_amplitude(float value) {
  set_has_amplitude();
  amplitude_ = value;
}

// optional float frequency = 3;
inline bool CUserMsg_Shake::has_frequency() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_Shake::set_has_frequency() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserMsg_Shake::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserMsg_Shake::clear_frequency() {
  frequency_ = 0;
  clear_has_frequency();
}
inline float CUserMsg_Shake::frequency() const {
  return frequency_;
}
inline void CUserMsg_Shake::set_frequency(float value) {
  set_has_frequency();
  frequency_ = value;
}

// optional float duration = 4;
inline bool CUserMsg_Shake::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMsg_Shake::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUserMsg_Shake::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUserMsg_Shake::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CUserMsg_Shake::duration() const {
  return duration_;
}
inline void CUserMsg_Shake::set_duration(float value) {
  set_has_duration();
  duration_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_ShakeDir

// optional .CUserMsg_Shake shake = 1;
inline bool CUserMsg_ShakeDir::has_shake() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_ShakeDir::set_has_shake() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_ShakeDir::clear_has_shake() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_ShakeDir::clear_shake() {
  if (shake_ != NULL) shake_->::CUserMsg_Shake::Clear();
  clear_has_shake();
}
inline const ::CUserMsg_Shake& CUserMsg_ShakeDir::shake() const {
  return shake_ != NULL ? *shake_ : *default_instance_->shake_;
}
inline ::CUserMsg_Shake* CUserMsg_ShakeDir::mutable_shake() {
  set_has_shake();
  if (shake_ == NULL) shake_ = new ::CUserMsg_Shake;
  return shake_;
}
inline ::CUserMsg_Shake* CUserMsg_ShakeDir::release_shake() {
  clear_has_shake();
  ::CUserMsg_Shake* temp = shake_;
  shake_ = NULL;
  return temp;
}

// optional .CMsgVector direction = 2;
inline bool CUserMsg_ShakeDir::has_direction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_ShakeDir::set_has_direction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_ShakeDir::clear_has_direction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_ShakeDir::clear_direction() {
  if (direction_ != NULL) direction_->::CMsgVector::Clear();
  clear_has_direction();
}
inline const ::CMsgVector& CUserMsg_ShakeDir::direction() const {
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
inline ::CMsgVector* CUserMsg_ShakeDir::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) direction_ = new ::CMsgVector;
  return direction_;
}
inline ::CMsgVector* CUserMsg_ShakeDir::release_direction() {
  clear_has_direction();
  ::CMsgVector* temp = direction_;
  direction_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CUserMsg_Tilt

// optional uint32 command = 1;
inline bool CUserMsg_Tilt::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_Tilt::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_Tilt::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_Tilt::clear_command() {
  command_ = 0u;
  clear_has_command();
}
inline ::google::protobuf::uint32 CUserMsg_Tilt::command() const {
  return command_;
}
inline void CUserMsg_Tilt::set_command(::google::protobuf::uint32 value) {
  set_has_command();
  command_ = value;
}

// optional bool ease_in_out = 2;
inline bool CUserMsg_Tilt::has_ease_in_out() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_Tilt::set_has_ease_in_out() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_Tilt::clear_has_ease_in_out() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_Tilt::clear_ease_in_out() {
  ease_in_out_ = false;
  clear_has_ease_in_out();
}
inline bool CUserMsg_Tilt::ease_in_out() const {
  return ease_in_out_;
}
inline void CUserMsg_Tilt::set_ease_in_out(bool value) {
  set_has_ease_in_out();
  ease_in_out_ = value;
}

// optional .CMsgVector angle = 3;
inline bool CUserMsg_Tilt::has_angle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_Tilt::set_has_angle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserMsg_Tilt::clear_has_angle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserMsg_Tilt::clear_angle() {
  if (angle_ != NULL) angle_->::CMsgVector::Clear();
  clear_has_angle();
}
inline const ::CMsgVector& CUserMsg_Tilt::angle() const {
  return angle_ != NULL ? *angle_ : *default_instance_->angle_;
}
inline ::CMsgVector* CUserMsg_Tilt::mutable_angle() {
  set_has_angle();
  if (angle_ == NULL) angle_ = new ::CMsgVector;
  return angle_;
}
inline ::CMsgVector* CUserMsg_Tilt::release_angle() {
  clear_has_angle();
  ::CMsgVector* temp = angle_;
  angle_ = NULL;
  return temp;
}

// optional float duration = 4;
inline bool CUserMsg_Tilt::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMsg_Tilt::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUserMsg_Tilt::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUserMsg_Tilt::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CUserMsg_Tilt::duration() const {
  return duration_;
}
inline void CUserMsg_Tilt::set_duration(float value) {
  set_has_duration();
  duration_ = value;
}

// optional float time = 5;
inline bool CUserMsg_Tilt::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserMsg_Tilt::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CUserMsg_Tilt::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CUserMsg_Tilt::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline float CUserMsg_Tilt::time() const {
  return time_;
}
inline void CUserMsg_Tilt::set_time(float value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_SayText

// optional uint32 client = 1;
inline bool CUserMsg_SayText::has_client() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_SayText::set_has_client() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_SayText::clear_has_client() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_SayText::clear_client() {
  client_ = 0u;
  clear_has_client();
}
inline ::google::protobuf::uint32 CUserMsg_SayText::client() const {
  return client_;
}
inline void CUserMsg_SayText::set_client(::google::protobuf::uint32 value) {
  set_has_client();
  client_ = value;
}

// optional string text = 2;
inline bool CUserMsg_SayText::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_SayText::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_SayText::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_SayText::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CUserMsg_SayText::text() const {
  return *text_;
}
inline void CUserMsg_SayText::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUserMsg_SayText::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUserMsg_SayText::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_SayText::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CUserMsg_SayText::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool chat = 3;
inline bool CUserMsg_SayText::has_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_SayText::set_has_chat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserMsg_SayText::clear_has_chat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserMsg_SayText::clear_chat() {
  chat_ = false;
  clear_has_chat();
}
inline bool CUserMsg_SayText::chat() const {
  return chat_;
}
inline void CUserMsg_SayText::set_chat(bool value) {
  set_has_chat();
  chat_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_SayText2

// optional uint32 client = 1;
inline bool CUserMsg_SayText2::has_client() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_SayText2::set_has_client() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_SayText2::clear_has_client() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_SayText2::clear_client() {
  client_ = 0u;
  clear_has_client();
}
inline ::google::protobuf::uint32 CUserMsg_SayText2::client() const {
  return client_;
}
inline void CUserMsg_SayText2::set_client(::google::protobuf::uint32 value) {
  set_has_client();
  client_ = value;
}

// optional bool chat = 2;
inline bool CUserMsg_SayText2::has_chat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_SayText2::set_has_chat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_SayText2::clear_has_chat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_SayText2::clear_chat() {
  chat_ = false;
  clear_has_chat();
}
inline bool CUserMsg_SayText2::chat() const {
  return chat_;
}
inline void CUserMsg_SayText2::set_chat(bool value) {
  set_has_chat();
  chat_ = value;
}

// optional string format = 3;
inline bool CUserMsg_SayText2::has_format() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_SayText2::set_has_format() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserMsg_SayText2::clear_has_format() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserMsg_SayText2::clear_format() {
  if (format_ != &::google::protobuf::internal::kEmptyString) {
    format_->clear();
  }
  clear_has_format();
}
inline const ::std::string& CUserMsg_SayText2::format() const {
  return *format_;
}
inline void CUserMsg_SayText2::set_format(const ::std::string& value) {
  set_has_format();
  if (format_ == &::google::protobuf::internal::kEmptyString) {
    format_ = new ::std::string;
  }
  format_->assign(value);
}
inline void CUserMsg_SayText2::set_format(const char* value) {
  set_has_format();
  if (format_ == &::google::protobuf::internal::kEmptyString) {
    format_ = new ::std::string;
  }
  format_->assign(value);
}
inline void CUserMsg_SayText2::set_format(const char* value, size_t size) {
  set_has_format();
  if (format_ == &::google::protobuf::internal::kEmptyString) {
    format_ = new ::std::string;
  }
  format_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_SayText2::mutable_format() {
  set_has_format();
  if (format_ == &::google::protobuf::internal::kEmptyString) {
    format_ = new ::std::string;
  }
  return format_;
}
inline ::std::string* CUserMsg_SayText2::release_format() {
  clear_has_format();
  if (format_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = format_;
    format_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string prefix = 4;
inline bool CUserMsg_SayText2::has_prefix() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMsg_SayText2::set_has_prefix() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUserMsg_SayText2::clear_has_prefix() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUserMsg_SayText2::clear_prefix() {
  if (prefix_ != &::google::protobuf::internal::kEmptyString) {
    prefix_->clear();
  }
  clear_has_prefix();
}
inline const ::std::string& CUserMsg_SayText2::prefix() const {
  return *prefix_;
}
inline void CUserMsg_SayText2::set_prefix(const ::std::string& value) {
  set_has_prefix();
  if (prefix_ == &::google::protobuf::internal::kEmptyString) {
    prefix_ = new ::std::string;
  }
  prefix_->assign(value);
}
inline void CUserMsg_SayText2::set_prefix(const char* value) {
  set_has_prefix();
  if (prefix_ == &::google::protobuf::internal::kEmptyString) {
    prefix_ = new ::std::string;
  }
  prefix_->assign(value);
}
inline void CUserMsg_SayText2::set_prefix(const char* value, size_t size) {
  set_has_prefix();
  if (prefix_ == &::google::protobuf::internal::kEmptyString) {
    prefix_ = new ::std::string;
  }
  prefix_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_SayText2::mutable_prefix() {
  set_has_prefix();
  if (prefix_ == &::google::protobuf::internal::kEmptyString) {
    prefix_ = new ::std::string;
  }
  return prefix_;
}
inline ::std::string* CUserMsg_SayText2::release_prefix() {
  clear_has_prefix();
  if (prefix_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = prefix_;
    prefix_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string text = 5;
inline bool CUserMsg_SayText2::has_text() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserMsg_SayText2::set_has_text() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CUserMsg_SayText2::clear_has_text() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CUserMsg_SayText2::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CUserMsg_SayText2::text() const {
  return *text_;
}
inline void CUserMsg_SayText2::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUserMsg_SayText2::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUserMsg_SayText2::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_SayText2::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CUserMsg_SayText2::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string location = 6;
inline bool CUserMsg_SayText2::has_location() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CUserMsg_SayText2::set_has_location() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CUserMsg_SayText2::clear_has_location() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CUserMsg_SayText2::clear_location() {
  if (location_ != &::google::protobuf::internal::kEmptyString) {
    location_->clear();
  }
  clear_has_location();
}
inline const ::std::string& CUserMsg_SayText2::location() const {
  return *location_;
}
inline void CUserMsg_SayText2::set_location(const ::std::string& value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  location_->assign(value);
}
inline void CUserMsg_SayText2::set_location(const char* value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  location_->assign(value);
}
inline void CUserMsg_SayText2::set_location(const char* value, size_t size) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  location_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_SayText2::mutable_location() {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  return location_;
}
inline ::std::string* CUserMsg_SayText2::release_location() {
  clear_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = location_;
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CUserMsg_HudMsg

// optional uint32 channel = 1;
inline bool CUserMsg_HudMsg::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_HudMsg::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_HudMsg::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_HudMsg::clear_channel() {
  channel_ = 0u;
  clear_has_channel();
}
inline ::google::protobuf::uint32 CUserMsg_HudMsg::channel() const {
  return channel_;
}
inline void CUserMsg_HudMsg::set_channel(::google::protobuf::uint32 value) {
  set_has_channel();
  channel_ = value;
}

// optional float x = 2;
inline bool CUserMsg_HudMsg::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_HudMsg::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_HudMsg::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_HudMsg::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CUserMsg_HudMsg::x() const {
  return x_;
}
inline void CUserMsg_HudMsg::set_x(float value) {
  set_has_x();
  x_ = value;
}

// optional float y = 3;
inline bool CUserMsg_HudMsg::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_HudMsg::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserMsg_HudMsg::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserMsg_HudMsg::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CUserMsg_HudMsg::y() const {
  return y_;
}
inline void CUserMsg_HudMsg::set_y(float value) {
  set_has_y();
  y_ = value;
}

// optional uint32 color1 = 4;
inline bool CUserMsg_HudMsg::has_color1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CUserMsg_HudMsg::set_has_color1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CUserMsg_HudMsg::clear_has_color1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CUserMsg_HudMsg::clear_color1() {
  color1_ = 0u;
  clear_has_color1();
}
inline ::google::protobuf::uint32 CUserMsg_HudMsg::color1() const {
  return color1_;
}
inline void CUserMsg_HudMsg::set_color1(::google::protobuf::uint32 value) {
  set_has_color1();
  color1_ = value;
}

// optional uint32 color2 = 5;
inline bool CUserMsg_HudMsg::has_color2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CUserMsg_HudMsg::set_has_color2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CUserMsg_HudMsg::clear_has_color2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CUserMsg_HudMsg::clear_color2() {
  color2_ = 0u;
  clear_has_color2();
}
inline ::google::protobuf::uint32 CUserMsg_HudMsg::color2() const {
  return color2_;
}
inline void CUserMsg_HudMsg::set_color2(::google::protobuf::uint32 value) {
  set_has_color2();
  color2_ = value;
}

// optional uint32 effect = 6;
inline bool CUserMsg_HudMsg::has_effect() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CUserMsg_HudMsg::set_has_effect() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CUserMsg_HudMsg::clear_has_effect() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CUserMsg_HudMsg::clear_effect() {
  effect_ = 0u;
  clear_has_effect();
}
inline ::google::protobuf::uint32 CUserMsg_HudMsg::effect() const {
  return effect_;
}
inline void CUserMsg_HudMsg::set_effect(::google::protobuf::uint32 value) {
  set_has_effect();
  effect_ = value;
}

// optional float fade_in_time = 7;
inline bool CUserMsg_HudMsg::has_fade_in_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CUserMsg_HudMsg::set_has_fade_in_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CUserMsg_HudMsg::clear_has_fade_in_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CUserMsg_HudMsg::clear_fade_in_time() {
  fade_in_time_ = 0;
  clear_has_fade_in_time();
}
inline float CUserMsg_HudMsg::fade_in_time() const {
  return fade_in_time_;
}
inline void CUserMsg_HudMsg::set_fade_in_time(float value) {
  set_has_fade_in_time();
  fade_in_time_ = value;
}

// optional float fade_out_time = 8;
inline bool CUserMsg_HudMsg::has_fade_out_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CUserMsg_HudMsg::set_has_fade_out_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CUserMsg_HudMsg::clear_has_fade_out_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CUserMsg_HudMsg::clear_fade_out_time() {
  fade_out_time_ = 0;
  clear_has_fade_out_time();
}
inline float CUserMsg_HudMsg::fade_out_time() const {
  return fade_out_time_;
}
inline void CUserMsg_HudMsg::set_fade_out_time(float value) {
  set_has_fade_out_time();
  fade_out_time_ = value;
}

// optional float hold_time = 9;
inline bool CUserMsg_HudMsg::has_hold_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CUserMsg_HudMsg::set_has_hold_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CUserMsg_HudMsg::clear_has_hold_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CUserMsg_HudMsg::clear_hold_time() {
  hold_time_ = 0;
  clear_has_hold_time();
}
inline float CUserMsg_HudMsg::hold_time() const {
  return hold_time_;
}
inline void CUserMsg_HudMsg::set_hold_time(float value) {
  set_has_hold_time();
  hold_time_ = value;
}

// optional float fx_time = 10;
inline bool CUserMsg_HudMsg::has_fx_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CUserMsg_HudMsg::set_has_fx_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CUserMsg_HudMsg::clear_has_fx_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CUserMsg_HudMsg::clear_fx_time() {
  fx_time_ = 0;
  clear_has_fx_time();
}
inline float CUserMsg_HudMsg::fx_time() const {
  return fx_time_;
}
inline void CUserMsg_HudMsg::set_fx_time(float value) {
  set_has_fx_time();
  fx_time_ = value;
}

// optional string message = 11;
inline bool CUserMsg_HudMsg::has_message() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CUserMsg_HudMsg::set_has_message() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CUserMsg_HudMsg::clear_has_message() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CUserMsg_HudMsg::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CUserMsg_HudMsg::message() const {
  return *message_;
}
inline void CUserMsg_HudMsg::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CUserMsg_HudMsg::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CUserMsg_HudMsg::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_HudMsg::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* CUserMsg_HudMsg::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CUserMsg_HudText

// optional string message = 1;
inline bool CUserMsg_HudText::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_HudText::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_HudText::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_HudText::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CUserMsg_HudText::message() const {
  return *message_;
}
inline void CUserMsg_HudText::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CUserMsg_HudText::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CUserMsg_HudText::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_HudText::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* CUserMsg_HudText::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CUserMsg_TextMsg

// optional uint32 dest = 1;
inline bool CUserMsg_TextMsg::has_dest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_TextMsg::set_has_dest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_TextMsg::clear_has_dest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_TextMsg::clear_dest() {
  dest_ = 0u;
  clear_has_dest();
}
inline ::google::protobuf::uint32 CUserMsg_TextMsg::dest() const {
  return dest_;
}
inline void CUserMsg_TextMsg::set_dest(::google::protobuf::uint32 value) {
  set_has_dest();
  dest_ = value;
}

// repeated string param = 2;
inline int CUserMsg_TextMsg::param_size() const {
  return param_.size();
}
inline void CUserMsg_TextMsg::clear_param() {
  param_.Clear();
}
inline const ::std::string& CUserMsg_TextMsg::param(int index) const {
  return param_.Get(index);
}
inline ::std::string* CUserMsg_TextMsg::mutable_param(int index) {
  return param_.Mutable(index);
}
inline void CUserMsg_TextMsg::set_param(int index, const ::std::string& value) {
  param_.Mutable(index)->assign(value);
}
inline void CUserMsg_TextMsg::set_param(int index, const char* value) {
  param_.Mutable(index)->assign(value);
}
inline void CUserMsg_TextMsg::set_param(int index, const char* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_TextMsg::add_param() {
  return param_.Add();
}
inline void CUserMsg_TextMsg::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
}
inline void CUserMsg_TextMsg::add_param(const char* value) {
  param_.Add()->assign(value);
}
inline void CUserMsg_TextMsg::add_param(const char* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CUserMsg_TextMsg::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CUserMsg_TextMsg::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// CUserMsg_GameTitle

// -------------------------------------------------------------------

// CUserMsg_ResetHUD

// -------------------------------------------------------------------

// CUserMsg_SendAudio

// optional bool stop = 2;
inline bool CUserMsg_SendAudio::has_stop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_SendAudio::set_has_stop() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_SendAudio::clear_has_stop() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_SendAudio::clear_stop() {
  stop_ = false;
  clear_has_stop();
}
inline bool CUserMsg_SendAudio::stop() const {
  return stop_;
}
inline void CUserMsg_SendAudio::set_stop(bool value) {
  set_has_stop();
  stop_ = value;
}

// optional string name = 3;
inline bool CUserMsg_SendAudio::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_SendAudio::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_SendAudio::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_SendAudio::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CUserMsg_SendAudio::name() const {
  return *name_;
}
inline void CUserMsg_SendAudio::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CUserMsg_SendAudio::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CUserMsg_SendAudio::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_SendAudio::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CUserMsg_SendAudio::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CUserMsg_VoiceMask

// repeated int32 audible_players_mask = 1;
inline int CUserMsg_VoiceMask::audible_players_mask_size() const {
  return audible_players_mask_.size();
}
inline void CUserMsg_VoiceMask::clear_audible_players_mask() {
  audible_players_mask_.Clear();
}
inline ::google::protobuf::int32 CUserMsg_VoiceMask::audible_players_mask(int index) const {
  return audible_players_mask_.Get(index);
}
inline void CUserMsg_VoiceMask::set_audible_players_mask(int index, ::google::protobuf::int32 value) {
  audible_players_mask_.Set(index, value);
}
inline void CUserMsg_VoiceMask::add_audible_players_mask(::google::protobuf::int32 value) {
  audible_players_mask_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CUserMsg_VoiceMask::audible_players_mask() const {
  return audible_players_mask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CUserMsg_VoiceMask::mutable_audible_players_mask() {
  return &audible_players_mask_;
}

// optional bool player_mod_enabled = 2;
inline bool CUserMsg_VoiceMask::has_player_mod_enabled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_VoiceMask::set_has_player_mod_enabled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_VoiceMask::clear_has_player_mod_enabled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_VoiceMask::clear_player_mod_enabled() {
  player_mod_enabled_ = false;
  clear_has_player_mod_enabled();
}
inline bool CUserMsg_VoiceMask::player_mod_enabled() const {
  return player_mod_enabled_;
}
inline void CUserMsg_VoiceMask::set_player_mod_enabled(bool value) {
  set_has_player_mod_enabled();
  player_mod_enabled_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_RequestState

// -------------------------------------------------------------------

// CUserMsg_HintText

// optional string message = 1;
inline bool CUserMsg_HintText::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_HintText::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_HintText::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_HintText::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CUserMsg_HintText::message() const {
  return *message_;
}
inline void CUserMsg_HintText::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CUserMsg_HintText::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CUserMsg_HintText::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_HintText::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* CUserMsg_HintText::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CUserMsg_KeyHintText

// repeated string messages = 1;
inline int CUserMsg_KeyHintText::messages_size() const {
  return messages_.size();
}
inline void CUserMsg_KeyHintText::clear_messages() {
  messages_.Clear();
}
inline const ::std::string& CUserMsg_KeyHintText::messages(int index) const {
  return messages_.Get(index);
}
inline ::std::string* CUserMsg_KeyHintText::mutable_messages(int index) {
  return messages_.Mutable(index);
}
inline void CUserMsg_KeyHintText::set_messages(int index, const ::std::string& value) {
  messages_.Mutable(index)->assign(value);
}
inline void CUserMsg_KeyHintText::set_messages(int index, const char* value) {
  messages_.Mutable(index)->assign(value);
}
inline void CUserMsg_KeyHintText::set_messages(int index, const char* value, size_t size) {
  messages_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_KeyHintText::add_messages() {
  return messages_.Add();
}
inline void CUserMsg_KeyHintText::add_messages(const ::std::string& value) {
  messages_.Add()->assign(value);
}
inline void CUserMsg_KeyHintText::add_messages(const char* value) {
  messages_.Add()->assign(value);
}
inline void CUserMsg_KeyHintText::add_messages(const char* value, size_t size) {
  messages_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CUserMsg_KeyHintText::messages() const {
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CUserMsg_KeyHintText::mutable_messages() {
  return &messages_;
}

// -------------------------------------------------------------------

// CUserMsg_StatsCrawlMsg

// -------------------------------------------------------------------

// CUserMsg_StatsSkipState

// optional int32 num_skips = 1;
inline bool CUserMsg_StatsSkipState::has_num_skips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_StatsSkipState::set_has_num_skips() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_StatsSkipState::clear_has_num_skips() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_StatsSkipState::clear_num_skips() {
  num_skips_ = 0;
  clear_has_num_skips();
}
inline ::google::protobuf::int32 CUserMsg_StatsSkipState::num_skips() const {
  return num_skips_;
}
inline void CUserMsg_StatsSkipState::set_num_skips(::google::protobuf::int32 value) {
  set_has_num_skips();
  num_skips_ = value;
}

// optional int32 num_players = 2;
inline bool CUserMsg_StatsSkipState::has_num_players() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_StatsSkipState::set_has_num_players() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_StatsSkipState::clear_has_num_players() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_StatsSkipState::clear_num_players() {
  num_players_ = 0;
  clear_has_num_players();
}
inline ::google::protobuf::int32 CUserMsg_StatsSkipState::num_players() const {
  return num_players_;
}
inline void CUserMsg_StatsSkipState::set_num_players(::google::protobuf::int32 value) {
  set_has_num_players();
  num_players_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_VoiceSubtitle

// optional int32 ent_index = 1;
inline bool CUserMsg_VoiceSubtitle::has_ent_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_VoiceSubtitle::set_has_ent_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_VoiceSubtitle::clear_has_ent_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_VoiceSubtitle::clear_ent_index() {
  ent_index_ = 0;
  clear_has_ent_index();
}
inline ::google::protobuf::int32 CUserMsg_VoiceSubtitle::ent_index() const {
  return ent_index_;
}
inline void CUserMsg_VoiceSubtitle::set_ent_index(::google::protobuf::int32 value) {
  set_has_ent_index();
  ent_index_ = value;
}

// optional int32 menu = 2;
inline bool CUserMsg_VoiceSubtitle::has_menu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_VoiceSubtitle::set_has_menu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_VoiceSubtitle::clear_has_menu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_VoiceSubtitle::clear_menu() {
  menu_ = 0;
  clear_has_menu();
}
inline ::google::protobuf::int32 CUserMsg_VoiceSubtitle::menu() const {
  return menu_;
}
inline void CUserMsg_VoiceSubtitle::set_menu(::google::protobuf::int32 value) {
  set_has_menu();
  menu_ = value;
}

// optional int32 item = 3;
inline bool CUserMsg_VoiceSubtitle::has_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_VoiceSubtitle::set_has_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserMsg_VoiceSubtitle::clear_has_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserMsg_VoiceSubtitle::clear_item() {
  item_ = 0;
  clear_has_item();
}
inline ::google::protobuf::int32 CUserMsg_VoiceSubtitle::item() const {
  return item_;
}
inline void CUserMsg_VoiceSubtitle::set_item(::google::protobuf::int32 value) {
  set_has_item();
  item_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_VGUIMenu_Keys

// optional string name = 1;
inline bool CUserMsg_VGUIMenu_Keys::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_VGUIMenu_Keys::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_VGUIMenu_Keys::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_VGUIMenu_Keys::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CUserMsg_VGUIMenu_Keys::name() const {
  return *name_;
}
inline void CUserMsg_VGUIMenu_Keys::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CUserMsg_VGUIMenu_Keys::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CUserMsg_VGUIMenu_Keys::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_VGUIMenu_Keys::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CUserMsg_VGUIMenu_Keys::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string value = 2;
inline bool CUserMsg_VGUIMenu_Keys::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_VGUIMenu_Keys::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_VGUIMenu_Keys::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_VGUIMenu_Keys::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CUserMsg_VGUIMenu_Keys::value() const {
  return *value_;
}
inline void CUserMsg_VGUIMenu_Keys::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CUserMsg_VGUIMenu_Keys::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CUserMsg_VGUIMenu_Keys::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_VGUIMenu_Keys::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* CUserMsg_VGUIMenu_Keys::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CUserMsg_VGUIMenu

// optional string name = 1;
inline bool CUserMsg_VGUIMenu::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_VGUIMenu::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_VGUIMenu::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_VGUIMenu::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CUserMsg_VGUIMenu::name() const {
  return *name_;
}
inline void CUserMsg_VGUIMenu::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CUserMsg_VGUIMenu::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CUserMsg_VGUIMenu::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_VGUIMenu::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CUserMsg_VGUIMenu::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool show = 2;
inline bool CUserMsg_VGUIMenu::has_show() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_VGUIMenu::set_has_show() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_VGUIMenu::clear_has_show() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_VGUIMenu::clear_show() {
  show_ = false;
  clear_has_show();
}
inline bool CUserMsg_VGUIMenu::show() const {
  return show_;
}
inline void CUserMsg_VGUIMenu::set_show(bool value) {
  set_has_show();
  show_ = value;
}

// repeated .CUserMsg_VGUIMenu.Keys keys = 3;
inline int CUserMsg_VGUIMenu::keys_size() const {
  return keys_.size();
}
inline void CUserMsg_VGUIMenu::clear_keys() {
  keys_.Clear();
}
inline const ::CUserMsg_VGUIMenu_Keys& CUserMsg_VGUIMenu::keys(int index) const {
  return keys_.Get(index);
}
inline ::CUserMsg_VGUIMenu_Keys* CUserMsg_VGUIMenu::mutable_keys(int index) {
  return keys_.Mutable(index);
}
inline ::CUserMsg_VGUIMenu_Keys* CUserMsg_VGUIMenu::add_keys() {
  return keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CUserMsg_VGUIMenu_Keys >&
CUserMsg_VGUIMenu::keys() const {
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::CUserMsg_VGUIMenu_Keys >*
CUserMsg_VGUIMenu::mutable_keys() {
  return &keys_;
}

// -------------------------------------------------------------------

// CUserMsg_Geiger

// optional int32 range = 1;
inline bool CUserMsg_Geiger::has_range() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_Geiger::set_has_range() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_Geiger::clear_has_range() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_Geiger::clear_range() {
  range_ = 0;
  clear_has_range();
}
inline ::google::protobuf::int32 CUserMsg_Geiger::range() const {
  return range_;
}
inline void CUserMsg_Geiger::set_range(::google::protobuf::int32 value) {
  set_has_range();
  range_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_Rumble

// optional int32 index = 1;
inline bool CUserMsg_Rumble::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_Rumble::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_Rumble::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_Rumble::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 CUserMsg_Rumble::index() const {
  return index_;
}
inline void CUserMsg_Rumble::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 data = 2;
inline bool CUserMsg_Rumble::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_Rumble::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_Rumble::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_Rumble::clear_data() {
  data_ = 0;
  clear_has_data();
}
inline ::google::protobuf::int32 CUserMsg_Rumble::data() const {
  return data_;
}
inline void CUserMsg_Rumble::set_data(::google::protobuf::int32 value) {
  set_has_data();
  data_ = value;
}

// optional int32 flags = 3;
inline bool CUserMsg_Rumble::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_Rumble::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserMsg_Rumble::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserMsg_Rumble::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CUserMsg_Rumble::flags() const {
  return flags_;
}
inline void CUserMsg_Rumble::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_Train

// optional int32 train = 1;
inline bool CUserMsg_Train::has_train() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_Train::set_has_train() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_Train::clear_has_train() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_Train::clear_train() {
  train_ = 0;
  clear_has_train();
}
inline ::google::protobuf::int32 CUserMsg_Train::train() const {
  return train_;
}
inline void CUserMsg_Train::set_train(::google::protobuf::int32 value) {
  set_has_train();
  train_ = value;
}

// -------------------------------------------------------------------

// CUserMsg_SayTextChannel

// optional int32 player = 1;
inline bool CUserMsg_SayTextChannel::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_SayTextChannel::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_SayTextChannel::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_SayTextChannel::clear_player() {
  player_ = 0;
  clear_has_player();
}
inline ::google::protobuf::int32 CUserMsg_SayTextChannel::player() const {
  return player_;
}
inline void CUserMsg_SayTextChannel::set_player(::google::protobuf::int32 value) {
  set_has_player();
  player_ = value;
}

// optional int32 channel = 2;
inline bool CUserMsg_SayTextChannel::has_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_SayTextChannel::set_has_channel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_SayTextChannel::clear_has_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_SayTextChannel::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 CUserMsg_SayTextChannel::channel() const {
  return channel_;
}
inline void CUserMsg_SayTextChannel::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
}

// optional string text = 3;
inline bool CUserMsg_SayTextChannel::has_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CUserMsg_SayTextChannel::set_has_text() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CUserMsg_SayTextChannel::clear_has_text() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CUserMsg_SayTextChannel::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CUserMsg_SayTextChannel::text() const {
  return *text_;
}
inline void CUserMsg_SayTextChannel::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUserMsg_SayTextChannel::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUserMsg_SayTextChannel::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_SayTextChannel::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CUserMsg_SayTextChannel::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CUserMsg_MessageText

// optional uint32 color = 1;
inline bool CUserMsg_MessageText::has_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CUserMsg_MessageText::set_has_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CUserMsg_MessageText::clear_has_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CUserMsg_MessageText::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 CUserMsg_MessageText::color() const {
  return color_;
}
inline void CUserMsg_MessageText::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
}

// optional string text = 2;
inline bool CUserMsg_MessageText::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CUserMsg_MessageText::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CUserMsg_MessageText::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CUserMsg_MessageText::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CUserMsg_MessageText::text() const {
  return *text_;
}
inline void CUserMsg_MessageText::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUserMsg_MessageText::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CUserMsg_MessageText::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CUserMsg_MessageText::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CUserMsg_MessageText::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< EBaseUserMessages>() {
  return EBaseUserMessages_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_usermessages_2eproto__INCLUDED
